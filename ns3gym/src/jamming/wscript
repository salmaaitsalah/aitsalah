# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('jamming', ['core'],['wifi'])
    module.source = [
        'model/nsl-wifi-channel.cc',
        'model/jammer-wifi-phy.cc',
        'model/wireless-module-utility.cc',
        'model/jammer.cc',
        'model/reactive-jammer.cc',
	'model/datacollection-module-utility.cc',
        'helper/jammer-container.cc',
        'helper/jammer-helper.cc',
        'helper/jammer-wifi-helper.cc',
        'helper/wireless-module-utility-container.cc',
        'helper/wireless-module-utility-helper.cc'
        
        ]

    module_test = bld.create_ns3_module_test_library('jamming')
    module_test.source = [
       
        ]
    # Tests encapsulating example programs should be listed here
    if (bld.env['ENABLE_EXAMPLES']):
        module_test.source.extend([
        #    'test/jamming-examples-test-suite.cc',
             ])

    headers = bld(features='ns3header')
    headers.module = 'jamming'
    headers.source = [
        'model/nsl-wifi-channel.h',
        'model/jammer-wifi-phy.h',
        'model/wireless-module-utility.h',
        'model/jammer.h',
        'model/reactive-jammer.h',
	'model/datacollection-module-utility.h',
        'helper/jammer-container.h',
        'helper/jammer-helper.h',
        'helper/jammer-wifi-helper.h',
        'helper/wireless-module-utility-container.h',
        'helper/wireless-module-utility-helper.h'
        
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

